{"id":"node_modules/bs-platform/lib/es6/caml_utils.js","dependencies":[{"name":"/Users/davidsancho/dev/reason-console-formatter/test/bs-demo/package.json","includedInParent":true,"mtime":1571157665044},{"name":"/Users/davidsancho/dev/reason-console-formatter/test/bs-demo/node_modules/bs-platform/package.json","includedInParent":true,"mtime":1571157631014}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.repeat = repeat;\n\nfunction repeat(count, self) {\n  if (self.repeat) {\n    return self.repeat(count);\n  }\n\n  if (self.length == 0 || count == 0) {\n    return '';\n  } // Ensuring count is a 31-bit integer allows us to heavily optimize the\n  // main part. But anyway, most current (August 2014) browsers can't handle\n  // strings 1 << 28 chars or longer, so:\n\n\n  if (self.length * count >= 1 << 28) {\n    throw new RangeError('repeat count must not overflow maximum string size');\n  }\n\n  var rpt = '';\n\n  for (;;) {\n    if ((count & 1) == 1) {\n      rpt += self;\n    }\n\n    count >>>= 1;\n\n    if (count == 0) {\n      break;\n    }\n\n    self += self;\n  }\n\n  return rpt;\n}\n\n;\n/* No side effect */"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":0}},{"name":"repeat","generated":{"line":8,"column":9},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":9}},{"generated":{"line":8,"column":15},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":0}},{"name":"count","generated":{"line":8,"column":16},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":17}},{"generated":{"line":8,"column":21},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":0}},{"name":"self","generated":{"line":8,"column":23},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":23}},{"generated":{"line":8,"column":27},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":0}},{"generated":{"line":8,"column":29},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":28}},{"generated":{"line":9,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":5,"column":4}},{"name":"self","generated":{"line":9,"column":6},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":5,"column":8}},{"generated":{"line":9,"column":10},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":5,"column":12}},{"name":"repeat","generated":{"line":9,"column":11},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":5,"column":13}},{"generated":{"line":9,"column":17},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":5,"column":4}},{"generated":{"line":9,"column":19},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":5,"column":20}},{"generated":{"line":10,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":8}},{"name":"self","generated":{"line":10,"column":11},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":15}},{"generated":{"line":10,"column":15},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":19}},{"name":"repeat","generated":{"line":10,"column":16},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":20}},{"generated":{"line":10,"column":22},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":15}},{"name":"count","generated":{"line":10,"column":23},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":27}},{"generated":{"line":10,"column":28},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":15}},{"generated":{"line":10,"column":29},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":6,"column":8}},{"generated":{"line":11,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":7,"column":5}},{"generated":{"line":13,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":4}},{"name":"self","generated":{"line":13,"column":6},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":8}},{"generated":{"line":13,"column":10},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":12}},{"name":"length","generated":{"line":13,"column":11},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":13}},{"generated":{"line":13,"column":17},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":8}},{"generated":{"line":13,"column":21},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":23}},{"generated":{"line":13,"column":22},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":8}},{"name":"count","generated":{"line":13,"column":26},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":28}},{"generated":{"line":13,"column":31},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":33}},{"generated":{"line":13,"column":35},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":37}},{"generated":{"line":13,"column":36},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":4}},{"generated":{"line":13,"column":38},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":8,"column":40}},{"generated":{"line":14,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":9,"column":12}},{"generated":{"line":14,"column":11},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":9,"column":19}},{"generated":{"line":14,"column":13},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":9,"column":12}},{"generated":{"line":15,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":10,"column":9}},{"generated":{"line":15,"column":3},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":4,"column":28}},{"generated":{"line":15,"column":4},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":11,"column":4}},{"generated":{"line":16,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":12,"column":4}},{"generated":{"line":17,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":13,"column":4}},{"generated":{"line":20,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":4}},{"name":"self","generated":{"line":20,"column":6},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":8}},{"generated":{"line":20,"column":10},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":12}},{"name":"length","generated":{"line":20,"column":11},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":13}},{"generated":{"line":20,"column":17},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":8}},{"name":"count","generated":{"line":20,"column":20},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":22}},{"generated":{"line":20,"column":25},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":8}},{"generated":{"line":20,"column":29},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":31}},{"generated":{"line":20,"column":34},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":36}},{"generated":{"line":20,"column":36},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":4}},{"generated":{"line":20,"column":38},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":14,"column":40}},{"generated":{"line":21,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":15,"column":12}},{"generated":{"line":21,"column":10},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":15,"column":18}},{"name":"RangeError","generated":{"line":21,"column":14},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":15,"column":22}},{"generated":{"line":21,"column":24},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":15,"column":18}},{"generated":{"line":21,"column":25},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":15,"column":33}},{"generated":{"line":21,"column":77},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":15,"column":18}},{"generated":{"line":21,"column":78},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":15,"column":12}},{"generated":{"line":22,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":16,"column":5}},{"generated":{"line":24,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":17,"column":4}},{"name":"rpt","generated":{"line":24,"column":6},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":17,"column":8}},{"generated":{"line":24,"column":9},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":17,"column":11}},{"generated":{"line":24,"column":12},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":17,"column":14}},{"generated":{"line":24,"column":14},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":17,"column":4}},{"generated":{"line":26,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":18,"column":4}},{"generated":{"line":26,"column":11},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":18,"column":13}},{"generated":{"line":27,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":12}},{"generated":{"line":27,"column":8},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":16}},{"name":"count","generated":{"line":27,"column":9},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":17}},{"generated":{"line":27,"column":14},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":22}},{"generated":{"line":27,"column":17},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":25}},{"generated":{"line":27,"column":18},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":16}},{"generated":{"line":27,"column":23},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":31}},{"generated":{"line":27,"column":24},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":12}},{"generated":{"line":27,"column":26},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":19,"column":34}},{"name":"rpt","generated":{"line":28,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":20,"column":16}},{"name":"rpt","generated":{"line":28,"column":6},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":20,"column":16}},{"generated":{"line":28,"column":9},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":20,"column":19}},{"name":"self","generated":{"line":28,"column":13},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":20,"column":23}},{"generated":{"line":28,"column":17},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":20,"column":16}},{"generated":{"line":29,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":21,"column":13}},{"name":"count","generated":{"line":31,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":22,"column":12}},{"name":"count","generated":{"line":31,"column":4},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":22,"column":12}},{"generated":{"line":31,"column":9},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":22,"column":17}},{"generated":{"line":31,"column":15},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":22,"column":23}},{"generated":{"line":31,"column":16},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":22,"column":12}},{"generated":{"line":33,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":23,"column":12}},{"name":"count","generated":{"line":33,"column":8},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":23,"column":16}},{"generated":{"line":33,"column":13},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":23,"column":21}},{"generated":{"line":33,"column":17},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":23,"column":25}},{"generated":{"line":33,"column":18},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":23,"column":12}},{"generated":{"line":33,"column":20},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":23,"column":28}},{"generated":{"line":34,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":24,"column":16}},{"generated":{"line":35,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":25,"column":13}},{"name":"self","generated":{"line":37,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":26,"column":12}},{"name":"self","generated":{"line":37,"column":4},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":26,"column":12}},{"generated":{"line":37,"column":8},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":26,"column":16}},{"name":"self","generated":{"line":37,"column":12},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":26,"column":20}},{"generated":{"line":37,"column":16},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":26,"column":12}},{"generated":{"line":38,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":27,"column":5}},{"generated":{"line":40,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":28,"column":4}},{"name":"rpt","generated":{"line":40,"column":9},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":28,"column":11}},{"generated":{"line":40,"column":12},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":28,"column":4}},{"generated":{"line":41,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":30,"column":1}},{"generated":{"line":43,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":30,"column":1}},{"generated":{"line":44,"column":0},"source":"node_modules/bs-platform/lib/es6/caml_utils.js","original":{"line":36,"column":0}}],"sources":{"node_modules/bs-platform/lib/es6/caml_utils.js":"\n\n\nfunction repeat (count,self){\n    if (self.repeat){\n        return self.repeat(count)\n    }\n    if (self.length == 0 || count == 0) {\n            return '';\n        }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n    }\n    return rpt;\n\n};\n\nexport {\n  repeat ,\n  \n}\n/* No side effect */\n"},"lineCount":null}},"error":null,"hash":"af022a86d0237bd04bb9a596faad3a84","cacheData":{"env":{}}}